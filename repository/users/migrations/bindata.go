package migrations

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

var __000001_init_db_down_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\xe5\x72\x09\xf2\x0f\x50\x70\x0b\xf5\x73\x0e\xf1\xf4\xf7\x53\x48\xcb\x8b\x2f\x2d\x48\x49\x2c\x49\x8d\x2f\xc9\xcc\x4d\x2d\x2e\x49\xcc\x2d\xb0\xe6\x02\x04\x00\x00\xff\xff\x77\x3e\x8a\xb9\x26\x00\x00\x00")

func _000001_init_db_down_sql() ([]byte, error) {
	return bindata_read(
		__000001_init_db_down_sql,
		"000001_init_db.down.sql",
	)
}

var __000001_init_db_up_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcd\xc1\x8a\xb3\x40\x10\x04\xe0\xf3\xf4\x53\x14\xc1\x43\x12\xf8\xf3\x02\xc3\x7f\x70\xb5\x75\x1b\xb2\x3d\xcb\x4c\x87\xe4\x26\x82\xae\x04\x4c\xd6\x45\x7d\xff\x45\xb2\xc7\x82\xfa\xaa\x8a\xc8\xb9\x31\xf8\x66\xac\x49\x82\x42\x2a\x68\x30\xf0\x4d\x92\x25\xec\xd6\xf5\xde\xfd\xfb\x9e\xe7\x69\xe7\x89\xfe\xca\x21\x22\xf2\xe7\x39\x2f\x18\xd5\x45\x0b\xdb\xd8\xd7\xb3\x59\xa7\xae\x5d\xfa\x66\xb9\x3f\xfa\x79\x69\x1f\xd3\xfe\x40\x91\xed\x12\x35\xc1\xa2\xd4\x35\x47\xe4\x09\x59\x46\x6f\x5c\x8b\x92\x93\x0a\xe1\x5c\x9e\x8e\x90\x84\x52\x92\x89\x16\x86\x2a\x86\x0f\x28\x5f\x4f\x47\xd8\x3b\x2b\x39\xe7\xdc\x16\x5f\xe3\x5d\xd3\x2e\xf8\x0f\x0d\xd7\xfd\xc1\x83\x1c\x6b\x09\xa9\x3c\xb9\xd7\xd1\x06\x3d\xb1\x96\x9e\xb2\x0c\x63\xfb\x1c\xd6\x76\xe8\x31\x8d\xd3\x30\xff\x8c\xf0\xf4\x1b\x00\x00\xff\xff\x93\xbe\xf0\xf8\xee\x00\x00\x00")

func _000001_init_db_up_sql() ([]byte, error) {
	return bindata_read(
		__000001_init_db_up_sql,
		"000001_init_db.up.sql",
	)
}

var __000002_users_down_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\xf0\x74\x53\x70\x8d\xf0\x0c\x0e\x09\x56\x50\x2a\x2d\x4e\x2d\x2a\x56\xb2\xe6\x02\x04\x00\x00\xff\xff\xb3\x49\x9e\xd5\x1e\x00\x00\x00")

func _000002_users_down_sql() ([]byte, error) {
	return bindata_read(
		__000002_users_down_sql,
		"000002_users.down.sql",
	)
}

var __000002_users_up_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x93\x41\x6f\xe2\x30\x10\x85\xef\xf9\x15\xa3\x5c\x9a\x48\x55\x0f\xab\xed\xa9\xea\x21\x84\xa1\x44\x0d\x0e\xeb\xda\x0b\xdd\x8b\xe5\x4d\x0c\xb2\x9a\xc4\xc8\x71\xa8\xf6\xdf\xaf\x4c\xa0\x54\xdb\x76\x81\x6b\xf2\xbd\x37\xf3\x3c\x33\x29\xc5\x84\x21\xb0\x64\x94\x23\x84\x7d\xa7\x6c\x17\x42\x14\x00\x84\xba\x0a\x81\xf3\x6c\x0c\x73\x9a\xcd\x12\xfa\x0c\x8f\xf8\x0c\x63\x9c\x24\x3c\x67\x10\xf5\xbd\xae\xc4\x5a\xb5\xca\x4a\xa7\xc4\xf6\x7b\x14\xc7\xd7\x81\x97\xa9\x46\xea\x3a\x84\x9f\x09\x4d\xa7\x09\x8d\xbe\xdd\xde\xc6\xc0\x49\xf6\x83\x23\x90\x82\x01\xe1\x79\x7e\xed\x39\x5f\xaa\x95\x8d\x3a\x03\xdd\xc8\xae\x7b\x35\xb6\x0a\x81\xe1\x92\xbd\xfd\x7b\x6b\xe6\xea\x6a\x87\x6d\x95\xd5\x2b\xad\xaa\x10\x46\x45\x91\x7f\xc4\x56\xb2\xee\xd4\x8e\xfc\x5d\x9b\xf2\xe5\x24\xb8\x2b\x6d\xcd\x56\x57\xca\xfe\xd3\xe5\x57\x2d\xac\x8d\x59\xd7\x4a\xf8\xa7\x3b\xcd\x7b\xc1\x27\x2f\xf0\x95\xf7\x4a\xdb\xce\x89\x0b\x04\xb5\xbc\x8c\x6f\x75\xf9\x72\x36\xef\x05\x72\x2b\x9d\xb4\xa2\xb7\xf5\x89\xc9\x6c\x74\xe9\x7a\xab\xce\x20\x6b\x53\x4a\xa7\x4d\xfb\x3f\xcc\x73\x8d\xec\x9c\x9f\xca\xe7\x03\x9c\x24\xf9\x13\x7a\xbf\x74\x8a\xe9\x23\x44\x03\x0d\x19\x81\x88\x51\x8e\xd7\x03\x70\xd8\xd8\xd2\x2a\xe9\x54\x25\xa4\x0b\x81\x65\x33\x7c\x62\xc9\x6c\xce\x7e\x7d\xb4\x8d\x5a\xf3\xba\xdb\x73\xbf\xbe\x9b\xea\x22\x51\x10\xdf\x05\x41\xb0\xbf\xb6\x8c\x8c\x71\x09\x05\x39\x1e\xdc\xfb\x26\x3c\xb9\x07\xf7\xd7\x30\xf0\xa1\x69\xeb\x3f\xc2\xb4\x4a\x1c\xd2\xbf\x77\x18\xbe\xc5\xb0\x98\x22\x45\xd8\x27\xbe\x07\x9f\xf7\xe8\xc7\x68\xf6\xf0\x80\x14\x9c\x5d\x8b\x21\x81\x38\x06\x81\x11\x4e\x0a\x8a\xc0\xe7\x63\xcf\x1e\xcd\x83\x49\x41\x01\x93\x74\x0a\xb4\x58\xf8\x02\x04\xa2\x22\x1f\xdf\xe8\x0a\xee\x81\xe0\xe2\x46\x57\x31\xe0\x12\x53\xce\x10\x26\x9c\xa4\x2c\x2b\x08\xac\xda\x43\x09\xa7\x1b\xd5\x39\xd9\x6c\xa2\xf8\x2e\xf8\x1b\x00\x00\xff\xff\xb5\x92\x78\x71\x71\x04\x00\x00")

func _000002_users_up_sql() ([]byte, error) {
	return bindata_read(
		__000002_users_up_sql,
		"000002_users.up.sql",
	)
}

var _bindata_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x97\x5b\x8b\x23\xc9\x11\x85\x9f\x55\xbf\xa2\x2c\x58\x23\x41\xd3\xae\xfb\x65\xa1\x5f\x76\xf1\xab\x1f\xfc\xea\x30\x22\xab\x32\xb3\x11\xee\x96\x7a\x74\xd9\x89\x19\x33\xff\xdd\x7c\x15\x29\xe6\x42\xf7\x60\x66\x76\x40\x23\x55\x66\x56\xc6\xe5\x9c\x38\x11\xfd\xe2\xe6\xff\xb8\xc7\x90\x3f\xef\x1f\x4f\xee\xb2\x3f\x1e\xce\x59\xb6\x7f\x7e\x39\x9e\x2e\xf9\x26\x5b\xad\xa7\x0f\x97\x70\x5e\x67\xab\xf5\x7c\x7c\x7e\x39\x85\xf3\xf9\x6f\x8f\x1f\xf7\x2f\x2c\xc4\xe7\x0b\x5f\xfb\x23\xff\x9f\x2f\xa7\xfd\xe1\xf1\xbc\xce\xb6\x59\x16\xaf\x87\x39\x9f\xf6\x07\xef\x2e\x6e\x77\x0a\xce\x6f\xf8\x95\xff\xeb\xdf\xdc\x75\x97\x1f\xdc\x73\xc8\xed\xfc\x36\xdf\xdc\x56\xc3\xe9\x74\x3c\x6d\xf3\xff\x66\xab\xc7\x8f\xcb\x53\xfe\xeb\x43\x8e\xa9\xfb\x7f\x84\xf7\xff\x0c\xce\x87\xd3\x66\xf1\x85\xe7\xdf\xae\x31\x86\xd3\x72\xed\x76\x9b\xad\xf6\x71\x79\xe1\x2f\x0f\xf9\x61\xff\xc4\x15\xab\x53\xb8\x5c\x4f\x07\x1e\xef\xf2\xf8\x7c\xb9\xff\x3b\xb7\xc7\xcd\x9a\x8b\xf2\x5f\xde\xfd\x9a\xff\xf2\xc7\xda\x3c\x59\x6c\x6d\xb3\xd5\xa7\x2c\x5b\xfd\xe1\x4e\xf9\x74\x8d\xb9\xd9\x31\x23\xd9\x6a\x67\xee\x3c\xe4\xfb\xe3\xfd\xef\xc7\x97\x0f\x9b\xbf\x4e\xd7\x78\x97\x3f\x7e\xdc\xe2\xeb\xfd\xef\x4f\xc7\x73\xd8\x6c\xb3\x3f\xcf\x8d\xf4\xd6\x74\x8d\xf7\xbf\xe1\xc9\x66\x7b\xc7\x15\xd9\xa7\x2c\xc3\xc3\xdd\xae\xe0\x5f\xb9\xdb\x1f\xf6\x97\x9d\x9f\x76\xfe\xf8\xfe\xb0\x3b\xbf\x7b\xca\x1f\x52\x8e\x37\x6b\xd1\x32\x8a\x0e\x93\x68\x31\x88\x16\xc5\xeb\x9f\x18\x45\x7d\x25\xea\x5b\xd1\xd0\x8a\xf6\x95\x68\x31\x8a\x46\xbe\xa3\x68\x5b\x88\xf6\x9c\x9d\x44\x23\xfb\xb5\x68\x11\x44\x63\x29\x1a\x1b\xd1\xd8\x8b\xb6\xb5\x68\x33\x88\xce\x93\xd9\xab\xa2\x68\xe5\x6d\xad\x19\x45\xab\xd9\xbe\x07\x6f\x7b\xf3\x28\x3a\xb3\xe6\xed\x5c\x15\x6c\x9f\x35\x9e\xa7\x42\x34\x74\xa2\x05\x3e\x34\x5f\xfb\xca\xa7\xef\x45\xeb\x20\x3a\x38\xd1\x89\xfb\xbb\x2f\x63\x5a\xdf\xe8\xf7\x56\x8e\x36\xaf\x52\xee\x96\xf1\x2f\x39\x9b\xad\x56\x6f\x66\xfa\x2e\x5b\xad\xd6\x5f\xef\xdd\xb3\x77\x7f\x7e\xf7\xb4\xbe\xcb\x56\xdb\x37\xb1\xba\xbe\xfc\x30\x52\x64\x72\xf6\xa2\x73\x99\xa2\x27\xf3\x85\x68\x59\x58\xa6\x02\xe7\x6a\x43\x06\x54\xca\xc6\xce\x36\xfc\xae\x44\xe3\x60\xfb\x64\x76\xae\x45\xfb\x68\xe8\x4e\x20\xdb\x8a\x96\x93\xe8\x54\x89\xd6\xde\xd0\x6c\x66\xd1\xa1\x17\x0d\x8d\x65\x79\xa8\x44\x5d\x30\x5b\xec\xf9\x4e\xb4\xe1\x5d\x6f\xfe\xf1\x9b\xf7\xe7\xde\xce\x46\x27\xea\x9c\xf9\x3a\x0f\x86\x56\x5d\x9a\x1f\x5d\x27\xea\x6e\xcc\xa8\x44\x9b\x4a\xb4\x72\xa2\xdd\x20\x5a\x13\x47\x61\x0c\x19\x59\x87\x9d\xc9\x1e\x2c\xf4\x30\x10\x9b\x93\xe8\x18\x44\x43\x2f\xda\x8d\xf6\x3d\xc0\xde\x20\x3a\x3b\xd1\xaa\x14\xad\x2a\x63\x33\x7b\xf5\x68\x0c\x2c\x07\x63\x3c\xfe\xc2\x6c\xcf\x87\xb5\xde\x72\xda\x8e\xa2\xae\xb7\x58\x5b\x6f\x71\xe0\xef\xe2\x7f\xb4\xe7\x7e\x34\x9b\x60\xe7\x6b\xb3\x09\x16\x63\x29\x1a\xbc\xe5\xbb\x6e\x2d\xff\x8e\x0a\x6b\xec\xb9\x49\xf9\xa4\xca\xb0\xd3\x74\xa2\x1d\x95\x36\x1b\x07\x88\x77\x04\x23\x27\x1a\x4a\x5b\x27\xc6\x21\x88\x8e\x85\xe8\x00\xb6\x95\x9d\x23\xd6\x12\x5c\x3a\xcb\x1d\xdf\x54\x6d\x35\x88\xb6\xe0\x11\xcd\x1e\xb1\xd5\x54\xe6\x64\x39\x20\x17\x7e\xb6\x77\x39\x17\x6a\x8b\x93\x38\xa8\x46\xf0\xe1\x9e\xc2\x5b\x4e\xe2\x8d\x73\xf0\x68\x16\xed\x26\xf3\xdf\x91\x8f\xd9\xf2\xc2\x39\x5f\x8a\x16\x9d\xf1\x67\x2a\x45\xc7\xce\x7c\x87\x13\x05\xef\xd5\x86\x59\x99\xb0\xec\x3b\xd1\x30\x18\x27\x86\x64\xbf\x4e\x5c\x1f\x66\xe3\x00\x5c\x86\x97\xdf\xaa\x00\x39\x9a\x42\x3a\x33\x88\x86\xf0\x7f\xa9\x80\x55\xdf\xcf\x69\x80\xdd\xf1\x9a\x02\x5c\x5f\xde\xaa\xff\x6a\x77\x3d\x87\xd3\xf9\xe7\x94\xfa\x35\x75\xe6\x9d\xbe\x14\xed\x1b\x5b\xe7\x77\xdb\x5a\x5e\xfa\xa4\x03\xd4\x38\xf9\x65\x0d\x1c\x50\xf0\x85\x7f\x9d\xdd\x01\x77\x16\xc5\x0e\x49\x91\x9d\xed\x81\xdb\xf7\x94\x78\xd1\x9f\xd1\x30\xa6\x9e\xca\xef\x61\xf0\x6d\x06\x7e\x04\x83\x6f\xef\xf8\x8c\x41\xda\xf9\xae\x06\xdf\xde\xfe\x09\x05\x1e\x1b\x63\x5e\x53\x5a\xd5\x86\xca\x18\x8b\x02\x0f\xa8\x14\x99\xa1\x2a\x5b\x51\x57\xa7\xea\x75\xd6\x0b\x41\x05\xd4\xdc\x64\x0a\x41\xf5\x84\xa4\x52\x54\xb5\x43\xa9\x1b\xab\x3a\x10\x0a\xa8\x92\x4b\x0a\xe5\xcd\x3f\x7a\x34\xaa\x08\x8a\xa0\xc3\xdd\x73\x63\xea\x0a\xf2\x0e\x85\xef\x44\x3d\x76\xa2\xa9\xb4\x2b\x44\xdb\xc6\x54\x8e\x8a\x1b\x4a\xab\x60\xd8\x32\x79\xd1\xba\xb7\xae\x40\x25\xd7\x28\x00\xbd\xb8\x35\x9f\xf0\x8d\x7e\xdc\x35\x16\x7b\x55\xdb\x3a\x8a\x8f\x42\x76\xa8\x48\x6f\xea\x5d\x26\x86\xb0\x3f\x39\x53\x30\x6c\x71\x37\xe7\xf0\x99\xf9\x61\xf1\x39\x29\x24\x4a\xca\xfa\x10\x93\xea\x24\x95\x18\x99\x05\x1a\xf3\xa9\xeb\x2d\xbf\x28\x3f\xfe\xa2\xca\xc4\xdc\x3a\xeb\x5c\x28\x7d\xe3\xcc\x1f\xd6\x89\xbf\x9f\x52\xf7\xeb\x4d\x99\xf0\x63\xec\x2d\xe7\x28\x2e\x79\xaf\x9d\xf9\x3a\x46\xab\x86\x26\xc5\x54\xa4\x59\x05\x75\x21\xef\x74\x9b\xb9\x13\x9d\x0b\x63\x3b\xf7\xa3\x84\xe4\x62\x51\x64\xaa\xa3\x34\xb5\xa6\x2b\xf4\xc1\xf0\x45\x69\x51\x57\x3a\xe0\xd8\xda\x9d\xd8\x2c\x6a\xbb\x17\xcc\x88\x05\x5f\xe9\x0c\x53\xf7\x39\x67\xdc\x35\x26\x7c\x50\x5f\xce\x80\x59\x48\xbe\x77\xce\x3a\x73\xe7\xed\x6e\xaa\x0f\x75\x77\xde\xec\x91\xaf\x26\x75\x67\x3a\x12\x9d\x7e\xc9\xd9\xad\xaa\x83\x75\x24\xba\x4a\x9c\x4d\xfd\xc7\xc4\x09\x38\x46\xee\xa7\xc1\xee\xc4\x06\x78\x2d\x6a\xd1\x5b\xbe\xe9\x76\xa8\x35\x67\x59\x43\x35\xe8\xe6\xc4\xd8\xa6\x6e\x00\x26\x60\x4a\x4e\xe9\x3e\x73\x8a\x83\x4e\x52\xf5\xd6\x89\x51\x24\xfc\x8f\xe9\x3c\x1c\x9d\x83\x75\x36\x78\x8f\xea\x80\xf1\x34\x5b\x47\xa0\xe6\x98\x54\xa8\x31\xd4\xb0\xee\xac\xe6\x8a\x34\xbb\xe2\xef\x08\x76\x8d\x75\xdd\xa9\x37\xde\x70\x1f\x73\x27\x3c\x44\x15\x03\xef\x3b\xab\x45\xec\x55\x85\xe5\x77\x99\x65\x13\x97\x9a\x34\x61\xd0\xf1\xe7\xc4\x5d\xe2\x63\x12\x81\x9f\xf0\x86\x5c\xd0\x4d\x8b\x2f\x38\xbb\xd4\x7f\x6d\xf7\x4f\xd1\xec\x31\x01\x61\x13\xce\x2c\x35\x5e\x5b\x9d\x97\xa3\xe1\x3d\xa0\x0f\xa5\xe1\xe1\xd3\x7d\xa8\xf6\x32\x95\x0c\x36\xa3\x57\xe9\x0e\x6a\x99\x89\xc8\x35\x96\xa3\xa5\x9e\x5b\xab\xdd\x9e\x1c\x55\x9f\x63\x25\x36\xf8\xd8\xa7\x9c\x2c\xf8\x38\xab\xc9\x29\xe5\x9b\xb8\xf0\x13\xbe\xc3\x81\x45\x93\x2a\xf3\x07\x1e\xf9\x94\xdf\x26\x69\xc1\x72\xb6\x33\x3c\xf8\xa0\x3b\xd4\x0c\x67\xe0\x3c\x5d\x80\xe9\x82\xdc\x31\x35\xde\x26\x84\xa2\x37\x9c\x89\xef\x36\xe1\xa1\x79\xcb\xe4\x76\xcb\x73\x65\x7e\x82\xc1\x32\x25\x54\x29\x87\xbd\x4d\x6d\xf8\x88\x36\xe1\xc7\x38\x98\x9f\x70\x9c\x1c\xc1\x29\xf6\xb1\x03\x36\xd8\x62\xba\x40\x03\xba\xa4\x8b\xd8\x1c\x0a\xd3\x86\x31\xf1\x7e\xf9\x9b\xa5\xb4\x3c\xd6\x83\x4d\x30\xfc\x2e\x4b\xeb\x88\xc5\x6d\x82\x2d\xd2\xa4\x59\x8b\xce\xd1\xe2\x84\xd3\x43\xea\x82\xe4\x07\x1d\xa0\x3f\x80\x39\xef\x11\x4b\x3b\x24\x6d\x4b\x5d\x14\x5e\xe2\xf7\x32\x39\x46\xf3\x71\x99\xf6\x42\xaa\xfd\xc2\xfa\x4a\x93\xea\xad\x4e\x6b\xe8\x25\xfc\x04\x53\x70\x21\xb7\xc4\x00\x0f\xf8\xcb\xa0\x4a\xfd\x8b\x3a\xa4\x6f\x30\xf5\x17\x69\x92\x65\x82\xf2\x09\x1f\x9f\xb8\xe1\xd2\x5f\x04\xd5\xff\x02\x00\x00\xff\xff\x96\x83\x93\xa6\x00\x10\x00\x00")

func bindata_go() ([]byte, error) {
	return bindata_read(
		_bindata_go,
		"bindata.go",
	)
}

var _migrate_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\x4d\x4f\xe4\x38\x10\x3d\xc7\xbf\xa2\x36\xa7\x44\x6a\xe2\xcb\x9e\x7a\xc5\x61\xc5\x80\x84\x04\x1c\x7a\xd4\x9a\x23\x38\x49\xb5\x53\x43\x62\x67\xca\x0e\x2d\x84\xf8\xef\x23\xe7\xbb\x01\x8d\x60\x4e\x40\xca\xef\xa3\x9e\x9f\x69\x55\xf1\xa8\x34\x42\x43\x9a\x95\x27\x6b\x9c\x10\xd4\xb4\x96\x3d\x24\x22\x8a\x35\xf9\xaa\xcb\xb3\xc2\x36\x52\xdb\x5a\x19\x7d\x36\x1c\x44\x39\xfd\x7c\xfa\x37\x16\xd1\x3d\x7c\xea\xa4\x2c\x95\x57\xb9\x72\xf8\x17\x10\xd9\x5a\xe7\x35\xa3\xfb\x02\xd6\xd9\x8e\x0b\x94\x07\xaa\x83\x62\x4e\x26\x90\x7d\x0d\xab\xed\xfd\x88\x7b\xa7\x5b\x53\x2e\xdb\x5f\xb1\x48\x85\x90\x12\x6e\x07\xe8\xde\x21\xbb\x1d\xb6\x16\x54\xdb\xd6\x84\x0e\xa6\x05\x56\x11\x43\xe7\xc8\x68\xf0\x15\xc2\x83\xb6\x67\xa3\xc0\x03\x4c\x97\xa1\x5c\x3f\x1b\x2c\x40\xc9\xf4\x84\x9c\x05\x91\x6b\x0f\x05\xa3\xf2\xe8\x40\x2d\x7c\xd3\xc1\x85\x35\x27\xa3\xf8\xb9\x97\x06\x8d\x06\x83\xb3\x12\xf2\xe7\x41\x72\x31\x32\x4b\x6e\x40\x99\x32\x4c\x4d\x90\x59\x34\x0c\x1e\x47\x1d\x04\x32\xce\x2b\x53\x20\x1c\xc9\x57\xef\xcd\x9f\xb8\x9d\xe8\xa0\x65\xfb\x44\x25\x96\x4b\x0c\xfb\xdd\x4d\x06\xd7\x3e\xe8\x04\xbd\x39\x27\x65\x9e\xa1\x45\x53\x86\x1d\x56\x51\x79\xdb\xf3\xcc\xf0\x40\x5c\x5b\x3d\x24\xc4\xe8\xba\xda\x87\x68\x02\xdd\xde\x29\x8d\xdb\xf0\xdb\xd8\xe0\xf5\x6d\x75\x0e\xd9\xa8\x06\x25\x63\x6b\xe5\x22\x10\x03\x48\x09\xad\x0a\x2b\xd9\x55\x58\xcb\x6a\x03\x7b\x44\x07\x40\x66\x38\x9f\xad\x64\x6f\xaf\x3c\x59\x58\xb3\xff\x9d\x43\x7f\xa7\x1a\x74\x49\xba\x81\xb7\x83\xf4\xbf\x9e\xeb\x9f\x73\x30\x54\xc3\x4b\xa0\x8f\x6a\xab\x39\xbb\x52\x5e\xd5\x49\x9a\x5d\x32\x27\xc8\x9c\x66\xb7\x4e\x27\xf1\x41\x51\x8d\x65\xf0\x37\xdd\xc5\xfc\x90\xd2\x80\x7d\x1d\x03\xb8\xb2\x0c\x3b\x3c\x20\xa3\x29\x70\x0b\x95\xf7\xad\xdb\x4a\xb9\x4a\xc1\x11\xff\x54\x1a\x59\x7a\xee\x50\x75\xbe\x92\x79\x6d\x73\xd9\x28\xe7\x91\x65\xa3\xc8\x64\xda\x8a\x43\x67\x8a\x77\x85\x4e\xa6\x07\xb8\xdf\xdd\x80\xf3\x4c\x46\xa7\x10\x4c\x86\x55\x2c\xa7\xf0\x22\x22\x29\x57\xad\x5c\x95\x50\x44\xf3\xe7\xef\x43\x4d\xb6\xe7\x30\xc6\x9b\xed\x70\xa8\x4e\x72\x9a\xd9\x10\x94\x88\x86\xe1\xb7\xbe\x56\x9b\x3e\xb6\x15\xf6\x07\xf9\xea\x7a\xec\x65\xf2\x46\x23\x15\xd3\x9d\xcd\x39\x47\x11\xa3\xef\xd8\x84\xaf\x22\x7a\x15\x22\x2a\xf3\x31\xd2\x99\x7a\xfc\x3b\xbb\xc3\x63\x60\x1f\xb8\x66\x8d\x78\xe9\x45\xbc\x81\x53\x6f\xab\x80\x3e\xa1\x1d\x8d\x6d\x9a\x0c\x64\xfb\x36\xf9\x10\x26\x25\x5c\x54\x58\x3c\x02\x1d\xfa\xd2\xf7\x71\x03\x39\x88\x8d\x85\xa2\x52\x46\x63\x0c\xc7\x8a\x8a\x0a\xc8\x94\x54\xf4\x4f\xd7\x57\xca\x87\xd3\x8c\xa0\x18\xc1\xd8\x0f\xde\x56\x36\x90\xdf\x58\x0d\xca\x00\x99\x83\x85\x06\x5d\x78\x44\x40\x06\x7c\x45\x0e\x8a\xd0\x73\x11\xad\x5c\x4d\x6e\x2f\x99\xef\xec\x45\xaf\xde\xbb\x3c\xd9\x2e\xac\x17\xa8\x8d\x5d\xdc\x0e\x73\x2c\xc7\x35\xfe\x64\x6c\x00\x3b\x0b\xe4\xc3\x3f\x21\xd7\x15\x05\x3a\x07\x85\x35\x25\x85\x03\xc3\xbc\xb6\x1a\x9c\x6d\xd0\x57\x01\x1d\x18\xfb\x58\x47\x1f\x86\x6a\xf1\x2a\x7e\x07\x00\x00\xff\xff\x2b\x1e\x35\xcc\xdf\x06\x00\x00")

func migrate_go() ([]byte, error) {
	return bindata_read(
		_migrate_go,
		"migrate.go",
	)
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		return f()
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() ([]byte, error){
	"000001_init_db.down.sql": _000001_init_db_down_sql,
	"000001_init_db.up.sql": _000001_init_db_up_sql,
	"000002_users.down.sql": _000002_users_down_sql,
	"000002_users.up.sql": _000002_users_up_sql,
	"bindata.go": bindata_go,
	"migrate.go": migrate_go,
}
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() ([]byte, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"000001_init_db.down.sql": &_bintree_t{_000001_init_db_down_sql, map[string]*_bintree_t{
	}},
	"000001_init_db.up.sql": &_bintree_t{_000001_init_db_up_sql, map[string]*_bintree_t{
	}},
	"000002_users.down.sql": &_bintree_t{_000002_users_down_sql, map[string]*_bintree_t{
	}},
	"000002_users.up.sql": &_bintree_t{_000002_users_up_sql, map[string]*_bintree_t{
	}},
	"bindata.go": &_bintree_t{bindata_go, map[string]*_bintree_t{
	}},
	"migrate.go": &_bintree_t{migrate_go, map[string]*_bintree_t{
	}},
}}
