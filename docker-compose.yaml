---
volumes:
  goth-redis:
  goth-postgres:

networks:
  goth:
  proxy:
    external: true

services:

  goth-redis:
    security_opt: [no-new-privileges:true]
    restart: unless-stopped
    container_name: goth-redis
    image: redis:alpine
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - goth-redis:/data
    networks: [goth]
    # ports: [6379:6379]

  goth-postgres:
    security_opt: [no-new-privileges:true]
    restart: unless-stopped
    container_name: goth-postgres
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - goth-postgres:/var/lib/postgresql/data
    networks: [goth]
    # ports: [5432:5432]   # Disable ports in production

  goth-haproxy:
    image: haproxy:lts-alpine
    container_name: goth-haproxy
    restart: unless-stopped
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    depends_on: [goth]
    ports: [4420:80]  # Http port
    networks: [proxy,goth]

  goth:
    security_opt: [no-new-privileges:true]
    build:
      context: .
    restart: unless-stopped
    command: ["/app/main"]
    entrypoint: ["/app/wait-for.sh", "goth-postgres:5432", "--", "/app/start.sh"]
    environment:
      REDIS_URL: "redis://default:@goth-redis:6379"
      POSTGRES_URL: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@goth-postgres:5432/goth?sslmode=disable"
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    depends_on: [goth-postgres, goth-redis]
    networks: [goth]
    deploy:
      replicas: 3
      resources:
        limits:
          memory: 256M

